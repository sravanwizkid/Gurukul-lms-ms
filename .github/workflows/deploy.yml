name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add concurrency to cancel running workflows
concurrency:
  group: "deploy"
  cancel-in-progress: true

env:
  PROJECT_ID: gurukul-lms-ms
  SERVICE_NAME: gurukul-sm-api
  REGION: asia-south1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run API Tests
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          NODE_ENV: test
        run: npm run test:ci

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker asia-south1-docker.pkg.dev

      - name: Build and Push Container
        run: docker build -t asia-south1-docker.pkg.dev/$PROJECT_ID/gurukul-repo/$SERVICE_NAME . && docker push asia-south1-docker.pkg.dev/$PROJECT_ID/gurukul-repo/$SERVICE_NAME

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
          --image asia-south1-docker.pkg.dev/$PROJECT_ID/gurukul-repo/$SERVICE_NAME \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --timeout=300s \
          --min-instances=0 \
          --max-instances=4

      - name: Clean up
        if: always()
        run: echo "Cleaning up resources..."

  post-deploy-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run Post-Deploy Tests
        env:
          API_BASE_URL: ${{ secrets.CLOUD_RUN_URL }}
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: npm test 