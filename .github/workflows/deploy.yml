name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

# Add concurrency to cancel running workflows
concurrency:
  group: "deploy"
  cancel-in-progress: true

env:
  PROJECT_ID: gurukul-lms-ms
  SERVICE_NAME: gurukul-sm-api
  REGION: asia-south1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Dependencies
      run: npm install
        
    - name: Build TypeScript
      run: npm run build

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK 
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Build and Push Container 
      run: |
        gcloud auth configure-docker asia-south1-docker.pkg.dev
        docker build -t asia-south1-docker.pkg.dev/$PROJECT_ID/gurukul-repo/$SERVICE_NAME .
        docker push asia-south1-docker.pkg.dev/$PROJECT_ID/gurukul-repo/$SERVICE_NAME

    - name: Deploy to Cloud Run  
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image asia-south1-docker.pkg.dev/$PROJECT_ID/gurukul-repo/$SERVICE_NAME \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --set-env-vars="NODE_ENV=production,DB_NAME=glms1,DB_USER=postgres,DB_PASSWORD=${{ secrets.DB_PASSWORD }},JWT_SECRET=${{ secrets.JWT_SECRET }}" \
          --add-cloudsql-instances="$PROJECT_ID:$REGION:gurukul-postgres" \
          --service-account="gurukul-sm-api@$PROJECT_ID.iam.gserviceaccount.com" 